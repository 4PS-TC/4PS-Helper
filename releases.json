{
  "25.1": {
    "versionMeta": {
      "release": "25.1",
      "major": "25",
      "minor": "1",
      "season": "0",
      "platform": "25.0.0.0",
      "application": "25.0.0.0",
      "runtime": "14.0"
    },
    "dates": {
      "releaseCandidate": "2025-02-11T00:00:00.000Z",
      "generalAvailability": "2025-02-11T00:00:00.000Z",
      "releaseDate": "2025-02-11T00:00:00.000Z"
    },
    "checkTcTicket": "TC-3393",
    "fixes": [
      {
        "name": "Remove preprocessors and pragmas",
        "type": "problem",
        "regex": {
          "pattern": "^\\s*(#if|#else|#pragma|#endif).*\\s*?[\\r\\n]*",
          "flags": "gm"
        },
        "replacement": ""
      },
      {
        "tc": "TC-3345",
        "name": "Package Tracking No.",
        "type": "problem",
        "regex": {
          "pattern": "DISABLED 20250224      ^(?!\\n)(\\s*)(.+)(\"Package Tracking No.\")(.+)(\\s*)$",
          "flags": "gm"
        },
        "replacement": "#if not CLEAN24\n#pragma warning disable AL0432\n#endif\n$1$2$3$4$5\n#if not CLEAN24\n#pragma warning restore AL0432\n#endif"
      },
      {
        "tc": "TC-4007",
        "name": "Direct assignment to the \"Filter\" field of type FlowFilter invalidates the filter logic for calculations. Use .SetFilter() or .SetRange() to set the filter correctly.",
        "type": "problem",
        "regex": {
          "pattern": "(\"Prognosis Filter\"|PrevPrognosisFilter|\"Progress Filter\"|PrevProgressFilter)\\s*:=\\s*(.+);",
          "flags": "g"
        },
        "replacement": "SetRange($1, $2);"
      },
      {
        "tc": "TC-3425",
        "name": "Vendor Assessment Line",
        "type": "problem",
        "regex": {
          "pattern": "\"Vendor Assessment Line\"",
          "flags": "g"
        },
        "replacement": "\"VER Vendor Assessment Line 4PS\"",
        "appDependencies": [
          {
            "name": "4PS Vendor Rating W1",
            "id": "1281253f-1413-45a0-a1c8-5dd3c25ccace",
            "publisher": "4PS B.V.",
            "version": "1.0.0.0"
          }
        ]
      },
      {
        "tc": "TC-3426",
        "name": "Select For Reporting",
        "type": "problem",
        "regex": {
          "pattern": "Codeunit \"Prognosis Management\"",
          "flags": "g"
        },
        "replacement": "Codeunit \"PER Prognosis Management 4PS\"",
        "appDependencies": [
          {
            "name": "4PS Prognosis End Result Report W1",
            "id": "64e94046-3789-4d76-9107-d8255353e483",
            "publisher": "4PS B.V.",
            "version": "1.0.0.0"
          }
        ]
      },
      {
        "tc": "TC-3426",
        "name": "Select For Reporting",
        "type": "problem",
        "regex": {
          "pattern": "\"Select For Reporting\"",
          "flags": "g"
        },
        "replacement": "\"PER Select For Reporting 4PS\"",
        "appDependencies": [
          {
            "name": "4PS Prognosis End Result Report W1",
            "id": "64e94046-3789-4d76-9107-d8255353e483",
            "publisher": "4PS B.V.",
            "version": "1.0.0.0"
          }
        ]
      },
      {
        "tc": "TC-4033",
        "name": "XML Implementations",
        "type": "problem",
        "regex": {
          "pattern": "Record \"Conversion File Format\"",
          "flags": "g"
        },
        "replacement": "Record Fps.BaseApplication.ImplementationControl.ConversionXmlPorts.\"Conversion File Format\"",
        "appDependencies": [
          {
            "name": "4PS Base Application W1",
            "id": "247e12d4-2649-4390-8349-240a67f10aa5",
            "publisher": "4PS B.V.",
            "version": "1.0.0.0"
          }
        ]
      },
      {
        "tc": "TC-4033",
        "name": "XML Implementations",
        "type": "problem",
        "regex": {
          "pattern": "Record \"Conversion XMLPort 4PS\"",
          "flags": "g"
        },
        "replacement": "Record Fps.BaseApplication.ImplementationControl.ConversionXmlPorts.\"Conversion XMLPort 4PS\"",
        "appDependencies": [
          {
            "name": "4PS Base Application W1",
            "id": "247e12d4-2649-4390-8349-240a67f10aa5",
            "publisher": "4PS B.V.",
            "version": "1.0.0.0"
          }
        ]
      },
      {
        "tc": "TC-4033",
        "name": "XML Implementations",
        "type": "problem",
        "regex": {
          "pattern": "Record \"Implementation Portal Company\"",
          "flags": "g"
        },
        "replacement": "Record Fps.BaseApplication.ImplementationControl.ImplPortal.\"Implementation Portal Company\"",
        "appDependencies": [
          {
            "name": "4PS Base Application W1",
            "id": "247e12d4-2649-4390-8349-240a67f10aa5",
            "publisher": "4PS B.V.",
            "version": "1.0.0.0"
          }
        ]
      },
      {
        "tc": "TC-4033",
        "name": "XML Implementations",
        "type": "problem",
        "regex": {
          "pattern": "Codeunit ConversionMgt",
          "flags": "g"
        },
        "replacement": "Codeunit \"Conversion Mgt.\"",
        "appDependencies": [
          {
            "name": "4PS Base Application W1",
            "id": "247e12d4-2649-4390-8349-240a67f10aa5",
            "publisher": "4PS B.V.",
            "version": "1.0.0.0"
          }
        ]
      },
      {
        "tc": "TC-4033",
        "name": "XML Implementations",
        "type": "problem",
        "regex": {
          "pattern": "Record \"XML Migration Table\"",
          "flags": "g"
        },
        "replacement": "Record  Fps.BaseApplication.ImplementationControl.ImplCompany.\"XML Migration Table\"",
        "appDependencies": [
          {
            "name": "4PS Base Application W1",
            "id": "247e12d4-2649-4390-8349-240a67f10aa5",
            "publisher": "4PS B.V.",
            "version": "1.0.0.0"
          }
        ]
      },
      {
        "tc": "TC-4008",
        "name": "Method 'SetTempEmailAttachments' is marked for removal. Reason: This procedure will be removed.. Tag: 24.0.",
        "type": "problem",
        "regex": {
          "pattern": "^(?!\\n)(\\s*)(EmailItem: Record \"Email Item\" temporary;)\\s*$",
          "flags": "gm"
        },
        "replacement": "$1$2\n$1DocumentMailing: Codeunit \"Document Mailing\";"
      },
      {
        "tc": "TC-4008",
        "name": "Method 'SetTempEmailAttachments' is marked for removal. Reason: This procedure will be removed.. Tag: 24.0.",
        "type": "problem",
        "regex": {
          "pattern": "EmailItem\\.SetTempEmailAttachments\\(TempEmailAttachment\\);",
          "flags": "g"
        },
        "replacement": "DocumentMailing.SetTempEmailAttachments(TempEmailAttachment);"
      }
    ]
  },
  "24.44": {
    "versionMeta": {
      "release": "24.44",
      "major": "24",
      "minor": "4",
      "season": "4",
      "platform": "24.0.0.0",
      "application": "24.0.0.0",
      "runtime": "13.0"
    },
    "dates": {
      "releaseCandidate": "2024-11-28T00:00:00.000Z",
      "generalAvailability": "2024-11-28T00:00:00.000Z",
      "releaseDate": "2024-10-14T00:00:00.000Z"
    },
    "fixes": [
      {
        "name": "Codeunit \"Document-Mailing\"",
        "type": "problem",
        "regex": {
          "pattern": "[C|c]odeunit \"Document-Mailing\"",
          "flags": "g"
        },
        "replacement": "Codeunit \"Document Mailing\""
      },
      {
        "name": "Codeunit \"Document-Print\";",
        "type": "problem",
        "regex": {
          "pattern": "^(\\s*)(.+)\\s*: [C|c]odeunit \"Document-Print\";",
          "flags": "gm"
        },
        "replacement": "$1$2: Codeunit \"Document-Print 4PS\";$1ReportSelections: Record \"Report Selections\";"
      },
      {
        "name": "Codeunit \"Document-Print\" - PrintBlanketScheme",
        "type": "problem",
        "regex": {
          "pattern": "^(\\s*)(?:.+).PrintBlanketScheme\\((.+)\\)",
          "flags": "gm"
        },
        "replacement": "$1ReportSelections.PrintReport(\"Report Selection Usage\"::\"Purchase - Blanket Scheme\", $2)"
      },
      {
        "name": "Codeunit \"Document-Print\" - GetReportSelectionForEmailAttachmentUsage",
        "type": "problem",
        "regex": {
          "pattern": "^(\\s*)(?:.+).GetReportSelectionForEmailAttachmentUsage\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)",
          "flags": "gm"
        },
        "replacement": "$1ReportSelections.PrintReport(\"Report Selection Usage\"::\"Purchase - Blanket Scheme\", $2)"
      },
      {
        "name": "Codeunit \"Document-Print\" - SaveSOAppointmentLettersAsExternalDocuments",
        "type": "problem",
        "regex": {
          "pattern": "^(\\s*)(?:.+).SaveSOAppointmentLettersAsExternalDocuments\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)",
          "flags": "gm"
        },
        "replacement": "$1ReportSelections.SaveSOAppointmentLettersAsExternalDocuments(3021, $2, $3, $4)"
      },
      {
        "name": "Codeunit \"Document-Print\" - PrintPlantInventoryCourse",
        "type": "problem",
        "regex": {
          "pattern": "^\\s*(?:.+).PrintPlantInventoryCourse\\((.+)\\)",
          "flags": "gm"
        },
        "replacement": "$1ReportSelections.PrintPlantInventoryCourse(\"Report Selection Usage\"::\"Plant - Inventory Course\", $2)"
      },
      {
        "name": "Codeunit \"Document-Print\" - PrintServContract",
        "type": "problem",
        "regex": {
          "pattern": "^(\\s*)(?:.+).PrintServContract\\((.+)\\)",
          "flags": "gm"
        },
        "replacement": "$1$2.SetRange(\"No.\", $2.\"No.\");\n$1ReportSelections.PrintReport(\"Report Selection Usage\"::\"SM.Contract\", $2)"
      },
      {
        "name": "Codeunit \"Document-Print\" - PrintServOrder",
        "type": "problem",
        "regex": {
          "pattern": "^(\\s*)(?:.+).PrintServOrder\\((.+)\\)",
          "flags": "gm"
        },
        "replacement": "$1$2.SetRange(\"No.\", $2.\"No.\");\n$1ReportSelections.PrintReport(\"Report Selection Usage\"::\"SM.Order\", $2)"
      },
      {
        "name": "Codeunit \"Document-Print\" - PrintServOrderTexts",
        "type": "problem",
        "regex": {
          "pattern": "^(\\s*)(?:.+).PrintServOrderTexts\\((.+)\\)",
          "flags": "gm"
        },
        "replacement": "$1$2.SetRange(\"No.\", $2.\"No.\");\n$1ReportSelections.PrintReport(\"Report Selection Usage\"::\"Service - Order Texts\", $2)"
      },
      {
        "name": "Codeunit \"Document-Print\" - PrintSurvey",
        "type": "problem",
        "regex": {
          "pattern": "^(\\s*)(?:.+).PrintSurvey\\((.+)\\)",
          "flags": "gm"
        },
        "replacement": "$1$2.SetRecFilter;\n$1ReportSelections.PrintReport(\"Report Selection Usage\"::\"Service - Order Texts\", $2)"
      },
      {
        "name": "Codeunit \"Document-Print\" - PrintProjectInstallments",
        "type": "problem",
        "regex": {
          "pattern": "^(\\s*)(?:.+).PrintProjectInstallments\\((.+)\\)",
          "flags": "gm"
        },
        "replacement": "$1ReportSelections.PrintReport(\"Report Selection Usage\"::\"Project - Project Installments\", $2)"
      },
      {
        "name": "Codeunit \"Document-Print\" - PrintProjectControl",
        "type": "problem",
        "regex": {
          "pattern": "^(\\s*)(?:.+).PrintProjectControl\\((.+)\\)",
          "flags": "gm"
        },
        "replacement": "$1ReportSelections.PrintReport(\"Report Selection Usage\"::\"Project - Project Control\", $2)"
      },
      {
        "name": "Codeunit \"Document-Print\" - PrintPlantInventory",
        "type": "problem",
        "regex": {
          "pattern": "^(\\s*)(?:.+).PrintPlantInventory\\((.+)\\)",
          "flags": "gm"
        },
        "replacement": "$1ReportSelections.PrintReport(\"Report Selection Usage\"::\"Plant - Inventory\", $2)"
      },
      {
        "name": "Codeunit NoSeriesManagement;",
        "type": "problem",
        "regex": {
          "pattern": "[C|c]odeunit NoSeriesManagement;",
          "flags": "g"
        },
        "replacement": "Codeunit \"No. Series\";"
      },
      {
        "name": "NoSeriesManagement SetNoSeriesLineFilter",
        "type": "problem",
        "regex": {
          "pattern": "\\.SetNoSeriesLineFilter\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\);",
          "flags": "g"
        },
        "replacement": ".GetNoSeriesLine($1, $2, $3, false);"
      },
      {
        "name": "NoSeriesManagement SetSeries",
        "type": "problem",
        "regex": {
          "pattern": "\\.SetSeries\\((.+)\\)",
          "flags": "g"
        },
        "replacement": ".GetNextNo($1)"
      },
      {
        "name": "NoSeriesManagement TryGetNextNo",
        "type": "problem",
        "regex": {
          "pattern": "\\.TryGetNextNo\\((.+)\\)",
          "flags": "g"
        },
        "replacement": ".PeekNextNo($1)"
      },
      {
        "name": "NoSeriesManagement SelectSeries",
        "type": "problem",
        "regex": {
          "pattern": "\\.SelectSeries\\((.+),\\s*(.+),\\s*(.+)\\)",
          "flags": "g"
        },
        "replacement": ".LookupRelatedNoSeries($2, $1, $3)"
      },
      {
        "name": "NoSeriesManagement InitSeries if else",
        "type": "problem",
        "regex": {
          "pattern": "(then|else)\\s*(.*).InitSeries\\(\\s*(.+),\\s*(.+),\\s*(.+),\\s*(.+),\\s*(.+)\\s*\\)",
          "flags": "gm"
        },
        "replacement": "$1 begin\n$7 := $3;\nif $2.AreRelated($3, $4) then\n$7 := $4;\n$6 := $2.GetNextNo($7);\nend"
      },
      {
        "name": "NoSeriesManagement InitSeries (no comments)",
        "type": "problem",
        "regex": {
          "pattern": "^(\\s+)([^\\/\\s]*).InitSeries\\(\\s*(.+),\\s*(.+),\\s*(.+),\\s*(.+),\\s*(.+)\\s*\\);",
          "flags": "gm"
        },
        "replacement": "$1$7 := $3;\n$1if $2.AreRelated($3, $4) then\n$1    $7 := $4;\n$1$6 := $2.GetNextNo($7);"
      },
      {
        "name": "NoSeriesManagement InitSeries (in comments)",
        "type": "problem",
        "regex": {
          "pattern": "DISABLED      ^(\\s*)((?:\\/\\/)*)(.*).InitSeries\\((.+),\\s*(.+),\\s*(.+),\\s*(.+),\\s*(.+)\\);",
          "flags": "g"
        },
        "replacement": "$1$2$8 := $4;\n$1$2if $3.AreRelated($4, $5) then\n$1$2$8 := $5;\n$1$2$7 := $3.GetNextNo($8);"
      },
      {
        "name": "Home Page",
        "type": "problem",
        "regex": {
          "pattern": "DISABLED 20250224      ^(?!\\n)(\\s*)(.+)(\"Home Page\")(.+)(\\s*)$",
          "flags": "gm"
        },
        "replacement": "#if not CLEAN24\n#pragma warning disable AL0432\n#endif\n$1$2$3$4$5\n#if not CLEAN24\n#pragma warning restore AL0432\n#endif"
      },
      {
        "name": "Home Page",
        "type": "problem",
        "regex": {
          "pattern": "DISABLED      ^(?!\\n)(\\s*)(.+)(\\.Field(?:Name|Caption)\\(\"Home Page\"\\))(.+)(\\s*)$",
          "flags": "gm"
        },
        "replacement": "#if not CLEAN24\n#pragma warning disable AL0432\n$1$2$3$4$5\n#pragma warning restore AL0432\n#endif"
      },
      {
        "name": "Prognosis End Result Report",
        "type": "problem",
        "regex": {
          "pattern": "DISABLED 20241216     ^(?!\\n)(\\s*)(.+)(\\.CalcEstimateResultPrognosis\\([^;]*;)(\\s*)$",
          "flags": "gm"
        },
        "replacement": "#if not FPS_PER_CLEAN23\n#pragma warning disable AL0432$1$2$3$4\n#pragma warning restore AL0432\n#endif"
      },
      {
        "name": "Conversion XMLPort 4PS & Conversion File Format",
        "type": "problem",
        "regex": {
          "pattern": "DISABLED 20241216     ^(\\s*)(.+)(Record \"(?:Conversion XMLPort 4PS|Conversion File Format)\";)",
          "flags": "gm"
        },
        "replacement": "#if not FPS_IMC_CLEAN23\n#pragma warning disable AL0432\n$1$2$3\n#pragma warning restore AL0432\n#endif"
      },
      {
        "name": "Document Portals + Document Portal Projects removal",
        "type": "problem",
        "regex": {
          "pattern": "DISABLED 20241216     ^(?!\\n)(\\s*)(.+)(\"(?:Generate Document Portal Site|Document Portal Site Generated|Document Portal URL|Document Portal Language|DPT Subsite Project|DPT Subsite Doc Type Project|DPT Resp Pers Perm Project|DPT Authority Perm Project)\"[\\),].*)$",
          "flags": "gm"
        },
        "replacement": "#if not FPS_DPP_CLEAN23\n#pragma warning disable AL0432\n$1$2$3\n#pragma warning restore AL0432\n#endif"
      },
      {
        "name": "Document Portals + Document Portal Projects removal",
        "type": "problem",
        "regex": {
          "pattern": "DISABLED 20241216     ^(?!\\n)(\\s*)(.+\\.(?:SetDPTFields\\(|\"Use New OAuth2\").+)$",
          "flags": "gm"
        },
        "replacement": "#if not FPS_DPP_CLEAN23\n#pragma warning disable AL0432\n$1$2\n#pragma warning restore AL0432\n#endif"
      },
      {
        "name": "Debrief",
        "type": "problem",
        "regex": {
          "pattern": "DISABLED 20241216     ^(?!\\n)(\\s*)(.+)(\"(?:Debrief Logbook \\(4PS-Mobile\\)|Debrief Work Order Texts \\(Mob\\)|Debrief Text \\(Mobile\\)|Debrief Cost Plus Entry \\(Mob\\.\\)|Field Service App Setup|Mandatory Fld\\. Exp\\. WO \\(FSA\\)|Debrief Serv\\. Ord\\. Obj\\. \\(Mob\\.\\)|Mobile Decentral Object|Debrief Work Order \\(Mobile\\))\")(.+)(\\s*)$",
          "flags": "gm"
        },
        "replacement": "#if not FPS_FSA_CLEAN23\n#pragma warning disable AL0432\n$1$2$3$4$5\n#pragma warning restore AL0432\n#endif"
      },
      {
        "name": "Parcels - 4PS Parcel Management",
        "type": "problem",
        "regex": {
          "pattern": "DISABLED 20241216     ^(?!\\n)(\\s*)(.*[^\"])(Parcels)(.+)(\\s*)$",
          "flags": "gm"
        },
        "replacement": "#if not FPS_PAM_CLEAN23\n#pragma warning disable AL0432\n$1$2$3$4$5\n#pragma warning restore AL0432\n#endif"
      },
      {
        "name": "Select For Reporting",
        "type": "problem",
        "regex": {
          "pattern": "DISABLED 20241216     ^(?!\\n)(\\s*)(.+)(\"Select For Reporting\")(.+)(\\s*)$",
          "flags": "gm"
        },
        "replacement": "#if not FPS_PER_CLEAN23\n#pragma warning disable AL0432\n$1$2$3$4$5\n#pragma warning restore AL0432\n#endif"
      },
      {
        "name": "Vendor Assessment Line",
        "type": "problem",
        "regex": {
          "pattern": "DISABLED 20241216     ^(?!\\n)(\\s*)(.+)(\"Vendor Assessment Line\")(.+)(\\s*)$",
          "flags": "gm"
        },
        "replacement": "#if not FPS_VER_CLEAN23\n#pragma warning disable AL0432\n$1$2$3$4$5\n#pragma warning restore AL0432\n#endif"
      },
      {
        "name": "GetAddressPosition",
        "type": "problem",
        "regex": {
          "pattern": "([\\w]+)\\.GetAddressPosition\\(\\s*(.+)\\.Address,\\s*.+,\\s*(.+),\\s*(.+)\\s*\\)",
          "flags": "gm"
        },
        "replacement": "$1.GetAddressPosition($2.Address, $2.City, $2.\"Post Code\", $2.\"Country/Region Code\", $3, $4)"
      },
      {
        "name": "E-plan",
        "type": "problem",
        "regex": {
          "pattern": "::\"E-Plan\"",
          "flags": "g"
        },
        "replacement": "::\"E-Plan\"",
        "appDependencies": [
          {
            "name": "4PS Interface E Plan W1",
            "id": "27dc84c3-bb5d-4f92-9125-8bbac23a5356",
            "publisher": "4PS B.V.",
            "version": "1.0.0.0"
          }
        ]
      },
      {
        "name": "Spoor CAO",
        "type": "problem",
        "regex": {
          "pattern": "\\.\"(Company No\\. Paymaster|Default Cost Component)\"",
          "flags": "g"
        },
        "replacement": ".\"$1 4PS\"",
        "appDependencies": [
          {
            "id": "6f556aec-20ad-4ded-80ba-0607e29dec12",
            "name": "4PS Spoor CAO NL",
            "publisher": "4PS B.V.",
            "version": "1.0.0.0"
          }
        ]
      },
      {
        "name": "Spoor CAO",
        "type": "problem",
        "regex": {
          "pattern": "\\.\"Administration No\\. Paymaster\"",
          "flags": "g"
        },
        "replacement": ".\"Admin. No. Paymaster 4PS\"",
        "appDependencies": [
          {
            "id": "6f556aec-20ad-4ded-80ba-0607e29dec12",
            "name": "4PS Spoor CAO NL",
            "publisher": "4PS B.V.",
            "version": "1.0.0.0"
          }
        ]
      },
      {
        "name": "Spoor CAO",
        "type": "problem",
        "regex": {
          "pattern": "\\.\"(UAR Task|UAR Task Description|UAR Task Pause Allowed)\"",
          "flags": "g"
        },
        "replacement": ".\"$1 4PS\"",
        "appDependencies": [
          {
            "id": "6f556aec-20ad-4ded-80ba-0607e29dec12",
            "name": "4PS Spoor CAO NL",
            "publisher": "4PS B.V.",
            "version": "1.0.0.0"
          }
        ]
      },
      {
        "name": "Spoor CAO",
        "type": "problem",
        "regex": {
          "pattern": "\\.\"UAR Task Travel Hours Allowed\"",
          "flags": "g"
        },
        "replacement": ".\"UAR Task Trav. Hrs. Allow. 4PS\"",
        "appDependencies": [
          {
            "id": "6f556aec-20ad-4ded-80ba-0607e29dec12",
            "name": "4PS Spoor CAO NL",
            "publisher": "4PS B.V.",
            "version": "1.0.0.0"
          }
        ]
      },
      {
        "name": "Barcode Scanning",
        "type": "problem",
        "regex": {
          "pattern": "\"Barcode Hour Accounting Setup\"",
          "flags": "g"
        },
        "replacement": "\"HRH Barcode Hr. Acc. Setup 4PS\"",
        "appDependencies": [
          {
            "name": "4PS Barcode Scanning W1",
            "id": "78cda4d1-ef38-433a-a0fd-f5d32daf889a",
            "publisher": "4PS B.V.",
            "version": "1.0.0.0"
          }
        ]
      },
      {
        "name": "Barcode Scanning",
        "type": "problem",
        "regex": {
          "pattern": "\"Barcode Hour Accounting\"",
          "flags": "g"
        },
        "replacement": "\"HRH Barcode Hour Acc. 4PS\"",
        "appDependencies": [
          {
            "name": "4PS Barcode Scanning W1",
            "id": "78cda4d1-ef38-433a-a0fd-f5d32daf889a",
            "publisher": "4PS B.V.",
            "version": "1.0.0.0"
          }
        ]
      },
      {
        "name": "ElemCostObjectControlRec.CalculateAllowedAndPrevious",
        "type": "problem",
        "regex": {
          "pattern": "ElemCostObjectControlRec\\.CalculateAllowedAndPrevious\\((.+)\\);",
          "flags": "g"
        },
        "replacement": "ElemCostObjectControlRec.CalculateAllowedAndPrevious($1, false);"
      },
      {
        "name": "Release",
        "type": "problem",
        "regex": {
          "pattern": "^(?!\\n)(\\s*)(.+)(\\.Release)(?:\\(\\)){0,1}(.+)(\\s*)$",
          "flags": "gm"
        },
        "replacement": "$1$2$3(false)$4$5"
      },
      {
        "name": "GetDescription > GetDescriptionText",
        "type": "problem",
        "regex": {
          "pattern": "([\\w]+)\\.GetDescription\\((.+?)\\);",
          "flags": "gm"
        },
        "replacement": "$1.GetDescriptionText($2);"
      },
      {
        "name": "Fix duplicate pragma's - Start",
        "type": "problem",
        "regex": {
          "pattern": "(#if not (?:CLEAN24|FPS_IMC_CLEAN23|FPS_PER_CLEAN23|FPS_DPP_CLEAN23|FPS_PAM_CLEAN23|FPS_VER_CLEAN23)\\s*#pragma warning disable AL0432\\s*){2,}",
          "flags": "gm"
        },
        "replacement": "$1\n"
      },
      {
        "name": "Fix duplicate pragma's - End",
        "type": "problem",
        "regex": {
          "pattern": "(#pragma warning restore AL0432\\s*#endif\\s*){2,}",
          "flags": "gm"
        },
        "replacement": "$1"
      },
      {
        "name": "Fix duplicate pragma's - End",
        "type": "problem",
        "regex": {
          "pattern": "(#pragma warning disable AL0432)\\n\\s*\\n+",
          "flags": "gm"
        },
        "replacement": "$1\n"
      }
    ]
  },
  "23.51": {
    "versionMeta": {
      "release": "23.51",
      "major": "23",
      "minor": "5",
      "season": "1",
      "platform": "23.0.0.0",
      "application": "23.0.0.0",
      "runtime": "12.0"
    },
    "dates": {
      "releaseCandidate": "2024-03-18T00:00:00.000Z",
      "generalAvailability": "2024-03-18T00:00:00.000Z",
      "releaseDate": "2024-05-02T00:00:00.000Z"
    },
    "fixes": []
  },
  "23.34": {
    "versionMeta": {
      "release": "23.34",
      "major": "23",
      "minor": "3",
      "season": "4",
      "platform": "23.0.0.0",
      "application": "23.0.0.0",
      "runtime": "12.0"
    },
    "dates": {
      "releaseCandidate": "2024-03-18T00:00:00.000Z",
      "generalAvailability": "2024-03-18T00:00:00.000Z",
      "releaseDate": "2024-05-02T00:00:00.000Z"
    },
    "fixes": []
  },
  "22.22": {
    "versionMeta": {
      "release": "22.22",
      "major": "22",
      "minor": "2",
      "season": "2",
      "platform": "22.0.0.0",
      "application": "22.0.0.0",
      "runtime": "11.0"
    },
    "dates": {
      "releaseCandidate": "2023-07-21T00:00:00.000Z",
      "generalAvailability": "2023-08-25T00:00:00.000Z",
      "releaseDate": "2023-10-05T00:00:00.000Z"
    },
    "fixes": [
      {
        "name": "EstimateLineTotal.DetermineSurchRcpLine",
        "type": "problem",
        "regex": {
          "pattern": "EstimateLineTotal\\.DetermineSurchRcpLine.+?, SummarySheet\\);",
          "flags": "g"
        },
        "replacement": "EstimateLineTotal.DetermineSurchRcpLine(\"Estimate Recipe Line\", SummarySheet, PrintTotalsBasedOn);"
      },
      {
        "name": "EstimateLineTotal.SummaryLineInFilter",
        "type": "problem",
        "regex": {
          "pattern": "EstimateLineTotal\\.SummaryLineInFilter\\(SummarySheet, \"Summary Sheet Line\", 0, \"Summary Sheet Line\"\\.Amount, \"Summary Sheet Line\"\\.Hours, TotSurchargeAmount, TotSurchargeHours\\);",
          "flags": "g"
        },
        "replacement": "EstimateLineTotal.SummaryLineInFilter(SummarySheet, \"Summary Sheet Line\", 0, \"Summary Sheet Line\".Amount, \"Summary Sheet Line\".Hours, \"Summary Sheet Line\".\"Summary Line Type\".AsInteger(), TotSurchargeAmount, TotSurchargeHours);"
      },
      {
        "name": "Page::Summary Sheet List",
        "type": "problem",
        "regex": {
          "pattern": "Page::\"Summary Sheet List\"",
          "flags": "g"
        },
        "replacement": "Page::\"Summary Sheets\""
      },
      {
        "name": "Page::Summary Sheet List",
        "type": "problem",
        "regex": {
          "pattern": "PAGE::\"Summary Sheet List\"",
          "flags": "g"
        },
        "replacement": "Page::\"Summary Sheets\""
      },
      {
        "name": "LookupBuyFromVendor4PS",
        "type": "problem",
        "regex": {
          "pattern": "Rec\\.LookupBuyFromVendor4PS\\(xRec\\)",
          "flags": "g"
        },
        "replacement": "Rec.LookupBuyFromVendor4PS(xRec, Rec.\"Buy-from Vendor Name\")"
      },
      {
        "name": "FindSet",
        "type": "deprecation",
        "regex": {
          "pattern": "\\.FindSet\\((true|false), (true|false)\\)",
          "flags": "gi"
        },
        "replacement": ".FindSet($1)"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(0\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\" \")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(1\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Qte.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(2\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Blnkt. Ord\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(3\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Ord. Cnfrmn.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(4\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Inv.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(5\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Shpt. Note\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(6\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Cr. Memo\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(7\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Stmnt.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(8\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Rmdr.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(9\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Serv. Ord. Create\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(10\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Serv. Ord. Post\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(11\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Purch.Qte.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(12\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Purch. Blnkt. Ord.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(13\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Purch. Ord.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(14\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Purch. Inv.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(15\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Purch. Rcpt.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(16\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Purch. Cr. Memo\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(17\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Cover Sheet\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(18\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Return Order\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(19\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Finance Charge Memo\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(20\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Return Receipt\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(21\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Purch. Return Shipment\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(22\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Purch. Return Ord. Cnfrmn.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(23\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Service Contract\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(24\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Service Contract Quote\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(25\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Service Quote\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(26\\)",
          "flags": "g"
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Draft Invoice\")"
      },
      {
        "name": "Cross-Reference No.",
        "type": "deprecation",
        "regex": {
          "pattern": "; Rec\\.\"Cross-Reference No.\"\\)",
          "flags": "g"
        },
        "replacement": "; Rec.\"Item Reference No.\")"
      },
      {
        "name": "Unit of Measure (Cross Ref.)",
        "type": "deprecation",
        "regex": {
          "pattern": "; Rec\\.\"Unit of Measure \\(Cross Ref.\\)\"\\)",
          "flags": "g"
        },
        "replacement": "; Rec.\"Item Reference Unit of Measure\")"
      },
      {
        "name": "Cross-Reference Type",
        "type": "deprecation",
        "regex": {
          "pattern": "; Rec\\.\"Cross-Reference Type\"\\)",
          "flags": "g"
        },
        "replacement": "; Rec.\"Item Reference Type\")"
      },
      {
        "name": "Cross-Reference Type No.",
        "type": "deprecation",
        "regex": {
          "pattern": "; Rec\\.\"Cross-Reference Type No.\"\\)",
          "flags": "g"
        },
        "replacement": "; Rec.\"Item Reference Type No.\")"
      },
      {
        "name": "System ID",
        "type": "deprecation",
        "regex": {
          "pattern": "; Rec\\.Id\\)",
          "flags": "g"
        },
        "replacement": "; Rec.SystemId)"
      },
      {
        "name": "Coupled to CRM",
        "type": "deprecation",
        "regex": {
          "pattern": "; Rec\\.\"Coupled to CRM\"\\)",
          "flags": "g"
        },
        "replacement": "; Rec.\"Coupled to Dataverse\")"
      },
      {
        "name": "InDataset removal",
        "type": "deprecation",
        "regex": {
          "pattern": "\\[InDataSet\\][\\r\\n\\s]+",
          "flags": "g"
        },
        "replacement": ""
      }
    ]
  },
  "21.41": {
    "versionMeta": {
      "release": "21.41",
      "major": "21",
      "minor": "4",
      "season": "1",
      "platform": "21.0.0.0",
      "application": "21.0.0.0",
      "runtime": "10.0"
    },
    "dates": {
      "releaseCandidate": "2000-01-01T00:00:00.000Z",
      "generalAvailability": "2000-01-01T00:00:00.000Z",
      "releaseDate": "2000-01-01T00:00:00.000Z"
    },
    "fixes": []
  },
  "21.24": {
    "versionMeta": {
      "release": "21.24",
      "major": "21",
      "minor": "2",
      "season": "4",
      "platform": "21.0.0.0",
      "application": "21.0.0.0",
      "runtime": "10.0"
    },
    "dates": {
      "releaseCandidate": "2000-01-01T00:00:00.000Z",
      "generalAvailability": "2000-01-01T00:00:00.000Z",
      "releaseDate": "2000-01-01T00:00:00.000Z"
    },
    "fixes": []
  },
  "20.12": {
    "versionMeta": {
      "release": "20.12",
      "major": "20",
      "minor": "1",
      "season": "2",
      "platform": "23.0.0.0",
      "application": "23.0.0.0",
      "runtime": "9.1"
    },
    "dates": {
      "releaseCandidate": "2024-03-18T00:00:00.000Z",
      "generalAvailability": "2024-03-18T00:00:00.000Z",
      "releaseDate": "2024-05-02T00:00:00.000Z"
    },
    "fixes": []
  },
  "NAVtoBCMigration": {
    "versionMeta": {
      "release": "NAV to BC migration",
      "major": "0",
      "minor": "0",
      "season": "0",
      "platform": "0.0.0.0",
      "application": "0.0.0.0",
      "runtime": "0.0"
    },
    "dates": {
      "releaseCandidate": "2020-01-01T00:00:00.000Z",
      "generalAvailability": "2020-01-01T00:00:00.000Z",
      "releaseDate": "2020-01-01T00:00:00.000Z"
    },
    "fixes": [
      {
        "name": "ApplyLastCalcSurchFactor",
        "type": "deprecation",
        "regex": {
          "pattern": "EstimateLineTotal\\.CalculateOfferPrice\\(Estimate, SummarySheet, \"Estimate Line\", PrintTotalsBasedOn\\);",
          "flags": "g"
        },
        "replacement": "EstimateLineTotal.CalculateOfferPrice(Estimate, SummarySheet, \"Estimate Line\", PrintTotalsBasedOn, ApplyLastCalcSurchFactor);"
      },
      {
        "name": "RecordLanguageToCodeunit_Variable",
        "type": "deprecation",
        "regex": {
          "pattern": "Language: Record Language;",
          "flags": "g"
        },
        "replacement": "Language: Codeunit Language;"
      },
      {
        "name": "RecordLanguageToCodeunit-Code",
        "type": "deprecation",
        "regex": {
          "pattern": "CurrReport\\.Language := Language\\.GetLanguageID\\(\"Language Code\"\\);",
          "flags": "g"
        },
        "replacement": "CurrReport.Language := Language.GetLanguageIdOrDefault(\"Language Code\");"
      },
      {
        "name": "JobAdrestoBillTo-Adress",
        "type": "deprecation",
        "regex": {
          "pattern": "[Jj]ob[Rr]ec\\.Address",
          "flags": "g"
        },
        "replacement": "JobRec.\"Bill-to Address\""
      },
      {
        "name": "DetermineBothDates (Single Project)",
        "type": "deprecation",
        "regex": {
          "pattern": "DetermineProgressDate\\.DetermineBothDates\\(Job\\);",
          "flags": "g"
        },
        "replacement": "DetermineProgressDate.DetermineBothDates(Job,true);"
      },
      {
        "name": "DetermineBothDates (Single Project)",
        "type": "deprecation",
        "regex": {
          "pattern": "SearchProgrDate\\.DetermineDate\\(Job\\);",
          "flags": "g"
        },
        "replacement": "SearchProgrDate.DetermineDate(Job,true);"
      },
      {
        "name": "Employee Picture to Image",
        "type": "deprecation",
        "regex": {
          "pattern": "EmployeeRec\\.Picture",
          "flags": "g"
        },
        "replacement": "EmployeeRec.Image"
      },
      {
        "name": "Employee Picture to Image",
        "type": "deprecation",
        "regex": {
          "pattern": "EmployeeRec\\.CalcFields\\(Picture\\)",
          "flags": "g"
        },
        "replacement": "EmployeeRec.CalcFields(Image)"
      },
      {
        "name": "Archive Quotes and Orders To Archive Orders",
        "type": "deprecation",
        "regex": {
          "pattern": "\"Archive Quotes and Orders\"",
          "flags": "g"
        },
        "replacement": "\"Archive Orders\""
      },
      {
        "name": "BuildInvLineBuffer2 > BuildInvLineBuffer",
        "type": "deprecation",
        "regex": {
          "pattern": "BuildInvLineBuffer2",
          "flags": "g"
        },
        "replacement": "BuildInvLineBuffer"
      },
      {
        "name": "CurrReport.PageNo",
        "type": "warning",
        "regex": {
          "pattern": "CurrReport\\.PageNo := 1;",
          "flags": "g"
        },
        "replacement": ""
      },
      {
        "name": "Faulty translation",
        "type": "warning",
        "regex": {},
        "replacement": "Handtekening"
      },
      {
        "name": "CurrReport.PageNo",
        "type": "warning",
        "regex": {
          "pattern": "StrSubstNo\\(Text005, Format\\(CurrReport.PageNo\\)\\)",
          "flags": "g"
        },
        "replacement": "''"
      },
      {
        "name": "CurrReport.CreateTotals",
        "type": "warning",
        "regex": {
          "pattern": "CurrReport.CreateTotals\\(.{0,250}\\);",
          "flags": "g"
        },
        "replacement": ""
      },
      {
        "name": "Enum PeriodType",
        "type": "warning",
        "regex": {
          "pattern": "PeriodType: Option Day,Week,Month,Quarter,Year,\"Accounting Period\";",
          "flags": "g"
        },
        "replacement": "PeriodType: Enum \"Analysis Period Type\";"
      },
      {
        "name": "Actual Reference Point",
        "type": "warning",
        "regex": {
          "pattern": "\"Actual Reference Point\"",
          "flags": "g"
        },
        "replacement": "\"Actual Reference Point (Gantt)\""
      }
    ]
  }
}
{
  "24.44": {
    "versionMeta": {
      "release": "24.44",
      "major": "24",
      "minor": "4",
      "season": "4",
      "platform": "24.0.0.0",
      "application": "24.0.0.0",
      "runtime": "13.0"
    },
    "dates": {
      "releaseCandidate": "2024-11-28T00:00:00.000Z",
      "generalAvailability": "2024-11-28T00:00:00.000Z",
      "releaseDate": "2024-10-14T00:00:00.000Z"
    },
    "fixes": [
      {
        "name": "Codeunit \"Document-Print\";",
        "type": "problem",
        "regex": {
          "pattern": "(\\w+)\\s*: [C|c]odeunit \"Document-Print\";",
          "flags": ""
        },
        "replacement": "$1: Codeunit \"Document-Print 4PS\"; ReportSelections: Record \"Report Selections\";"
      },
      {
        "name": "Codeunit NoSeriesManagement;",
        "type": "problem",
        "regex": {
          "pattern": "[C|c]odeunit NoSeriesManagement;",
          "flags": ""
        },
        "replacement": "Codeunit \"No. Series\";"
      },
      {
        "name": "NoSeriesManagement SetNoSeriesLineFilter",
        "type": "problem",
        "regex": {
          "pattern": "\\.SetNoSeriesLineFilter\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\);",
          "flags": ""
        },
        "replacement": ".GetNoSeriesLine($1, $2, $3, false);"
      },
      {
        "name": "NoSeriesManagement SetSeries",
        "type": "problem",
        "regex": {
          "pattern": "\\.SetSeries\\((.+)\\)",
          "flags": ""
        },
        "replacement": ".GetNextNo($1)"
      },
      {
        "name": "NoSeriesManagement SelectSeries",
        "type": "problem",
        "regex": {
          "pattern": "\\.SelectSeries\\((.+),\\s*(.+),\\s*(.+)\\)",
          "flags": ""
        },
        "replacement": ".LookupRelatedNoSeries($2, $1, $3)"
      },
      {
        "name": "Conversion XMLPort 4PS",
        "type": "problem",
        "regex": {
          "pattern": "Record \"Conversion XMLPort 4PS\";",
          "flags": ""
        },
        "replacement": "Record Fps.ImplementationControl.ConversionXmlPorts.\"Conversion XMLPort 4PS\";",
        "appDependencies": [
          {
            "name": "4PS Implementation Control W1",
            "id": "3359e125-5f33-4992-8b74-b6597d5d649b",
            "publisher": "4PS B.V.",
            "version": "1.0.0.0"
          }
        ]
      },
      {
        "name": "Conversion File Format",
        "type": "problem",
        "regex": {
          "pattern": "Record \"Conversion File Format\";",
          "flags": ""
        },
        "replacement": "Record Fps.ImplementationControl.ConversionXmlPorts.\"Conversion File Format\";",
        "appDependencies": [
          {
            "name": "4PS Implementation Control W1",
            "id": "3359e125-5f33-4992-8b74-b6597d5d649b",
            "publisher": "4PS B.V.",
            "version": "1.0.0.0"
          }
        ]
      },
      {
        "name": "NoSeriesManagement InitSeries",
        "type": "problem",
        "regex": {
          "pattern": "(.*).InitSeries\\((.+),\\s*(.+),\\s*(.+),\\s*(.+),\\s*(.+)\\);",
          "flags": ""
        },
        "replacement": "$6 := $2; if $1.AreRelated($2, $3) then $6 := $3; $5 := $1.GetNextNo($6);"
      }
    ]
  },
  "23.51": {
    "versionMeta": {
      "release": "23.51",
      "major": "23",
      "minor": "5",
      "season": "1",
      "platform": "23.0.0.0",
      "application": "23.0.0.0",
      "runtime": "12.0"
    },
    "dates": {
      "releaseCandidate": "2024-03-18T00:00:00.000Z",
      "generalAvailability": "2024-03-18T00:00:00.000Z",
      "releaseDate": "2024-05-02T00:00:00.000Z"
    },
    "fixes": []
  },
  "23.34": {
    "versionMeta": {
      "release": "23.34",
      "major": "23",
      "minor": "3",
      "season": "4",
      "platform": "23.0.0.0",
      "application": "23.0.0.0",
      "runtime": "12.0"
    },
    "dates": {
      "releaseCandidate": "2024-03-18T00:00:00.000Z",
      "generalAvailability": "2024-03-18T00:00:00.000Z",
      "releaseDate": "2024-05-02T00:00:00.000Z"
    },
    "fixes": []
  },
  "22.22": {
    "versionMeta": {
      "release": "22.22",
      "major": "22",
      "minor": "2",
      "season": "2",
      "platform": "22.0.0.0",
      "application": "22.0.0.0",
      "runtime": "11.0"
    },
    "dates": {
      "releaseCandidate": "2023-07-21T00:00:00.000Z",
      "generalAvailability": "2023-08-25T00:00:00.000Z",
      "releaseDate": "2023-10-05T00:00:00.000Z"
    },
    "fixes": [
      {
        "name": "EstimateLineTotal.DetermineSurchRcpLine",
        "type": "problem",
        "regex": {
          "pattern": "EstimateLineTotal\\.DetermineSurchRcpLine.+?, SummarySheet\\);",
          "flags": ""
        },
        "replacement": "EstimateLineTotal.DetermineSurchRcpLine(\"Estimate Recipe Line\", SummarySheet, PrintTotalsBasedOn);"
      },
      {
        "name": "EstimateLineTotal.SummaryLineInFilter",
        "type": "problem",
        "regex": {
          "pattern": "EstimateLineTotal\\.SummaryLineInFilter\\(SummarySheet, \"Summary Sheet Line\", 0, \"Summary Sheet Line\"\\.Amount, \"Summary Sheet Line\"\\.Hours, TotSurchargeAmount, TotSurchargeHours\\);",
          "flags": ""
        },
        "replacement": "EstimateLineTotal.SummaryLineInFilter(SummarySheet, \"Summary Sheet Line\", 0, \"Summary Sheet Line\".Amount, \"Summary Sheet Line\".Hours, \"Summary Sheet Line\".\"Summary Line Type\".AsInteger(), TotSurchargeAmount, TotSurchargeHours);"
      },
      {
        "name": "Page::Summary Sheet List",
        "type": "problem",
        "regex": {
          "pattern": "Page::\"Summary Sheet List\"",
          "flags": ""
        },
        "replacement": "Page::\"Summary Sheets\""
      },
      {
        "name": "Page::Summary Sheet List",
        "type": "problem",
        "regex": {
          "pattern": "PAGE::\"Summary Sheet List\"",
          "flags": ""
        },
        "replacement": "Page::\"Summary Sheets\""
      },
      {
        "name": "LookupBuyFromVendor4PS",
        "type": "problem",
        "regex": {
          "pattern": "Rec\\.LookupBuyFromVendor4PS\\(xRec\\)",
          "flags": ""
        },
        "replacement": "Rec.LookupBuyFromVendor4PS(xRec, Rec.\"Buy-from Vendor Name\")"
      },
      {
        "name": "FindSet",
        "type": "deprecation",
        "regex": {
          "pattern": "\\.FindSet\\((true|false), (true|false)\\)",
          "flags": ""
        },
        "replacement": ".FindSet($1)"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(0\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\" \")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(1\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Qte.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(2\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Blnkt. Ord\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(3\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Ord. Cnfrmn.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(4\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Inv.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(5\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Shpt. Note\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(6\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Cr. Memo\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(7\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Stmnt.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(8\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Rmdr.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(9\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Serv. Ord. Create\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(10\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Serv. Ord. Post\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(11\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Purch.Qte.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(12\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Purch. Blnkt. Ord.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(13\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Purch. Ord.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(14\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Purch. Inv.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(15\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Purch. Rcpt.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(16\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Purch. Cr. Memo\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(17\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Cover Sheet\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(18\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Return Order\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(19\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Finance Charge Memo\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(20\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Return Receipt\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(21\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Purch. Return Shipment\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(22\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Purch. Return Ord. Cnfrmn.\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(23\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Service Contract\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(24\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Service Contract Quote\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(25\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Service Quote\")"
      },
      {
        "name": "FindInteractTmplCode",
        "type": "deprecation",
        "regex": {
          "pattern": "FindInteractTmplCode\\(26\\)",
          "flags": ""
        },
        "replacement": "FindInteractionTemplateCode(\"Interaction Log Entry Document Type\"::\"Sales Draft Invoice\")"
      },
      {
        "name": "Cross-Reference No.",
        "type": "deprecation",
        "regex": {
          "pattern": "; Rec\\.\"Cross-Reference No.\"\\)",
          "flags": ""
        },
        "replacement": "; Rec.\"Item Reference No.\")"
      },
      {
        "name": "Unit of Measure (Cross Ref.)",
        "type": "deprecation",
        "regex": {
          "pattern": "; Rec\\.\"Unit of Measure \\(Cross Ref.\\)\"\\)",
          "flags": ""
        },
        "replacement": "; Rec.\"Item Reference Unit of Measure\")"
      },
      {
        "name": "Cross-Reference Type",
        "type": "deprecation",
        "regex": {
          "pattern": "; Rec\\.\"Cross-Reference Type\"\\)",
          "flags": ""
        },
        "replacement": "; Rec.\"Item Reference Type\")"
      },
      {
        "name": "Cross-Reference Type No.",
        "type": "deprecation",
        "regex": {
          "pattern": "; Rec\\.\"Cross-Reference Type No.\"\\)",
          "flags": ""
        },
        "replacement": "; Rec.\"Item Reference Type No.\")"
      },
      {
        "name": "System ID",
        "type": "deprecation",
        "regex": {
          "pattern": "; Rec\\.Id\\)",
          "flags": ""
        },
        "replacement": "; Rec.SystemId)"
      },
      {
        "name": "Coupled to CRM",
        "type": "deprecation",
        "regex": {
          "pattern": "; Rec\\.\"Coupled to CRM\"\\)",
          "flags": ""
        },
        "replacement": "; Rec.\"Coupled to Dataverse\")"
      },
      {
        "name": "InDataset removal",
        "type": "deprecation",
        "regex": {
          "pattern": "\\[InDataSet\\][\\r\\n\\s]+",
          "flags": ""
        },
        "replacement": ""
      },
      {
        "name": "Language codeunit 1",
        "type": "warning",
        "regex": {
          "pattern": " Language: Codeunit Language;",
          "flags": ""
        },
        "replacement": " CodLanguage: Codeunit Language;"
      },
      {
        "name": "Language codeunit 2",
        "type": "warning",
        "regex": {
          "pattern": " Language.GetLanguageIdOrDefault\\(",
          "flags": ""
        },
        "replacement": " CodLanguage.GetLanguageIdOrDefault("
      },
      {
        "name": "Language codeunit 2 alt",
        "type": "warning",
        "regex": {
          "pattern": " Language.GetLanguageID\\(",
          "flags": ""
        },
        "replacement": " CodLanguage.GetLanguageID("
      }
    ]
  },
  "21.41": {
    "versionMeta": {
      "release": "21.41",
      "major": "21",
      "minor": "4",
      "season": "1",
      "platform": "21.0.0.0",
      "application": "21.0.0.0",
      "runtime": "10.0"
    },
    "dates": {
      "releaseCandidate": "2000-01-01T00:00:00.000Z",
      "generalAvailability": "2000-01-01T00:00:00.000Z",
      "releaseDate": "2000-01-01T00:00:00.000Z"
    },
    "fixes": []
  },
  "21.24": {
    "versionMeta": {
      "release": "21.24",
      "major": "21",
      "minor": "2",
      "season": "4",
      "platform": "21.0.0.0",
      "application": "21.0.0.0",
      "runtime": "10.0"
    },
    "dates": {
      "releaseCandidate": "2000-01-01T00:00:00.000Z",
      "generalAvailability": "2000-01-01T00:00:00.000Z",
      "releaseDate": "2000-01-01T00:00:00.000Z"
    },
    "fixes": []
  },
  "20.12": {
    "versionMeta": {
      "release": "20.12",
      "major": "20",
      "minor": "1",
      "season": "2",
      "platform": "23.0.0.0",
      "application": "23.0.0.0",
      "runtime": "9.1"
    },
    "dates": {
      "releaseCandidate": "2024-03-18T00:00:00.000Z",
      "generalAvailability": "2024-03-18T00:00:00.000Z",
      "releaseDate": "2024-05-02T00:00:00.000Z"
    },
    "fixes": []
  },
  "NAVtoBCMigration": {
    "versionMeta": {
      "release": "NAV to BC migration",
      "major": "0",
      "minor": "0",
      "season": "0",
      "platform": "0.0.0.0",
      "application": "0.0.0.0",
      "runtime": "0.0"
    },
    "dates": {
      "releaseCandidate": "2020-01-01T00:00:00.000Z",
      "generalAvailability": "2020-01-01T00:00:00.000Z",
      "releaseDate": "2020-01-01T00:00:00.000Z"
    },
    "fixes": [
      {
        "name": "ApplyLastCalcSurchFactor",
        "type": "deprecation",
        "regex": {
          "pattern": "EstimateLineTotal\\.CalculateOfferPrice\\(Estimate, SummarySheet, \"Estimate Line\", PrintTotalsBasedOn\\);",
          "flags": ""
        },
        "replacement": "EstimateLineTotal.CalculateOfferPrice(Estimate, SummarySheet, \"Estimate Line\", PrintTotalsBasedOn, ApplyLastCalcSurchFactor);"
      },
      {
        "name": "RecordLanguageToCodeunit_Variable",
        "type": "deprecation",
        "regex": {
          "pattern": "Language: Record Language;",
          "flags": ""
        },
        "replacement": "Language: Codeunit Language;"
      },
      {
        "name": "RecordLanguageToCodeunit-Code",
        "type": "deprecation",
        "regex": {
          "pattern": "CurrReport\\.Language := Language\\.GetLanguageID\\(\"Language Code\"\\);",
          "flags": ""
        },
        "replacement": "CurrReport.Language := Language.GetLanguageIdOrDefault(\"Language Code\");"
      },
      {
        "name": "JobAdrestoBillTo-Adress",
        "type": "deprecation",
        "regex": {
          "pattern": "[Jj]ob[Rr]ec\\.Address",
          "flags": ""
        },
        "replacement": "JobRec.\"Bill-to Address\""
      },
      {
        "name": "DetermineBothDates (Single Project)",
        "type": "deprecation",
        "regex": {
          "pattern": "DetermineProgressDate\\.DetermineBothDates\\(Job\\);",
          "flags": ""
        },
        "replacement": "DetermineProgressDate.DetermineBothDates(Job,true);"
      },
      {
        "name": "DetermineBothDates (Single Project)",
        "type": "deprecation",
        "regex": {
          "pattern": "SearchProgrDate\\.DetermineDate\\(Job\\);",
          "flags": ""
        },
        "replacement": "SearchProgrDate.DetermineDate(Job,true);"
      },
      {
        "name": "Employee Picture to Image",
        "type": "deprecation",
        "regex": {
          "pattern": "EmployeeRec\\.Picture",
          "flags": ""
        },
        "replacement": "EmployeeRec.Image"
      },
      {
        "name": "Employee Picture to Image",
        "type": "deprecation",
        "regex": {
          "pattern": "EmployeeRec\\.CalcFields\\(Picture\\)",
          "flags": ""
        },
        "replacement": "EmployeeRec.CalcFields(Image)"
      },
      {
        "name": "Archive Quotes and Orders To Archive Orders",
        "type": "deprecation",
        "regex": {
          "pattern": "\"Archive Quotes and Orders\"",
          "flags": ""
        },
        "replacement": "\"Archive Orders\""
      },
      {
        "name": "BuildInvLineBuffer2 > BuildInvLineBuffer",
        "type": "deprecation",
        "regex": {
          "pattern": "BuildInvLineBuffer2",
          "flags": ""
        },
        "replacement": "BuildInvLineBuffer"
      },
      {
        "name": "CurrReport.PageNo",
        "type": "warning",
        "regex": {
          "pattern": "CurrReport\\.PageNo := 1;",
          "flags": ""
        },
        "replacement": ""
      },
      {
        "name": "Faulty translation",
        "type": "warning",
        "regex": {},
        "replacement": "Handtekening"
      },
      {
        "name": "CurrReport.PageNo",
        "type": "warning",
        "regex": {
          "pattern": "StrSubstNo\\(Text005, Format\\(CurrReport.PageNo\\)\\)",
          "flags": ""
        },
        "replacement": "''"
      },
      {
        "name": "CurrReport.CreateTotals",
        "type": "warning",
        "regex": {
          "pattern": "CurrReport.CreateTotals\\(.{0,250}\\);",
          "flags": ""
        },
        "replacement": ""
      },
      {
        "name": "Enum PeriodType",
        "type": "warning",
        "regex": {
          "pattern": "PeriodType: Option Day,Week,Month,Quarter,Year,\"Accounting Period\";",
          "flags": ""
        },
        "replacement": "PeriodType: Enum \"Analysis Period Type\";"
      },
      {
        "name": "Actual Reference Point",
        "type": "warning",
        "regex": {
          "pattern": "\"Actual Reference Point\"",
          "flags": ""
        },
        "replacement": "\"Actual Reference Point (Gantt)\""
      }
    ]
  }
}